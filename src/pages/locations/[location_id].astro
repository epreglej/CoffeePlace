---
import Layout from "../../layouts/Layout.astro";
import { supabase } from "../../db/supabase";

const { location_id } = Astro.params;
const { cookies, redirect } = Astro;

const accessToken = cookies.get("sb-access-token");
const refreshToken = cookies.get("sb-refresh-token");

if (!accessToken || !refreshToken) {
    cookies.set("referrer-url", Astro.url.pathname, {
        path: "/",
    });
    return redirect("/login");
}

const { data, error } = await supabase.auth.setSession({
    refresh_token: refreshToken.value,
    access_token: accessToken.value,
});

if (error) {
    cookies.delete("sb-access-token", {
        path: "/",
    });
    cookies.delete("sb-refresh-token", {
        path: "/",
    });

    return redirect("/login");
}

const email = data.user?.email;

// iz baze povuci detalje o specifičnom kafiću na temelju UUID iz linka
const location = {
    id: "u3z",
    neighborhood: "Kozari bok",
    street_address: "Unska 3",
    city: "Zagreb",
};

const tables = [
    {
        id: 1,
        location_uuid: "u3z",
        taken_seats: 2,
        total_seats: 4,
        reserved: false,
        coordinates: { row: 200, col: 50 },
    },
    {
        id: 2,
        taken_seats: 0,
        total_seats: 4,
        reserved: false,
        coordinates: { row: 0, col: 200 },
    },
    {
        id: 3,
        taken_seats: 5,
        total_seats: 6,
        reserved: false,
        coordinates: { row: 300, col: 1 },
    },
    {
        id: 4,
        taken_seats: 0,
        total_seats: 6,
        reserved: true,
        coordinates: { row: 3, col: 5 },
    },
];
---

<Layout title="CoffeePlace">
    <main>
        <div class="center-align top-margin large-margin">
            <article
                class="top-margin medium-elevate medium-width center center-align middle-align surface"
            >
                <h4 class="freeman-regular">Edit location</h4>
            </article>
        </div>

        <div><span>Location ID: {location_id}</span></div>
        <!-- <div class="seating-chart medium-width center-align center"> -->
        <article
            class="vertical-margin medium-elevate medium-width center surface"
        >
            <div id="grid" class="medium-width border" style="height: 300px;">
                {
                    tables.map((table) => (
                        <div
                            class={`table ${
                                table.reserved
                                    ? "red6"
                                    : table.taken_seats === 0
                                      ? "green5"
                                      : "orange4"
                            }`}
                            data-ui="#dialog"
                            data-id={table.id}
                            style={`transform:translate(${table.coordinates.row}px, ${table.coordinates.col}px);`}
                        >
                            <span class="center-align small-padding">
                                {table.taken_seats}/{table.total_seats}
                                <i class="small" style="margin-top:-15px;">
                                    airline_seat_recline_normal
                                </i>
                            </span>
                        </div>
                    ))
                }
                <div
                    id="entrance"
                    class="black"
                    style="transform:translate(138px, 0px);  width:75px; height:5px;"
                >
                </div>

                <div
                    class="border"
                    style="transform:translate(284px, 195px);  width:50px; height:90px;"
                >
                    bar
                </div>
            </div>

            <div class="overlay blur"></div>
            <dialog id="dialog" class="center small-width">
                <form id="reservation-form">
                    <h5 class="center-align bottom-margin">Reservation</h5>
                    <p class="center-align">
                        <span>Are you sure that you want to reserve</span>
                        <span id="form-table-id" class="bold"></span>
                        <span>for next 15 minutes?</span>
                    </p>

                    <nav class="center-align">
                        <button type="submit" data-ui="#dialog">Confirm</button>
                        <button
                            type="button"
                            class="transparent"
                            data-ui="#dialog"
                        >
                            Cancel
                        </button>
                    </nav>
                </form>
            </dialog>
        </article>
    </main>

    <script define:vars={{ email, location_id, tables }}>
        document.addEventListener("DOMContentLoaded", function () {
            const tables = document.querySelectorAll(".table");
            tables.forEach((table) => {
                const originalContent = table.innerHTML;
                table.addEventListener("mouseenter", function (event) {
                    table.innerHTML =
                        "<span class='center middle-align'>" +
                        event.currentTarget.getAttribute("data-id") +
                        "</span>";
                });
                table.addEventListener("mouseleave", function (event) {
                    table.innerHTML = originalContent;
                });
            });
        });

        let selected_table_id = null;

        let handleClick = (id) => {
            selected_table_id = id;
            console.log("Table clicked with ID:", id);
            document.getElementById("form-table-id").innerHTML =
                `Table ${selected_table_id}`;
        };

        const tableButtons = document.querySelectorAll(".table");
        tableButtons.forEach((button) => {
            button.addEventListener("click", () =>
                handleClick(button.dataset.id),
            );
        });

        document
            .getElementById("reservation-form")
            .addEventListener("submit", async (event) => {
                event.preventDefault(); // Prevent the default form submission

                const formData = new FormData();
                formData.append("email", email);
                formData.append("location-id", location_id);
                formData.append("table-id", selected_table_id);

                try {
                    const response = await fetch("/api/reservation", {
                        method: "POST",
                        body: formData,
                    });

                    if (response.status === 303) {
                        window.location.reload();
                    }

                    // handle error ako ne uspije
                    //
                    //
                } catch (error) {
                    console.error("Error signing in:", error);
                    alert(
                        "An unexpected error occurred. Please try again later.",
                    ); // Generic error message
                }
            });
    </script>
</Layout>

<style>
    .table {
        position: absolute;
        width: 50px;
        height: 50px;
        padding: 1px;
        background-clip: content-box;
        border-radius: 50%;
        display: flex;
        font-size: 20px;
    }

    .table:hover {
        outline: 2px solid;
        outline-color: #ff0000;
        cursor: pointer;
    }
</style>
