---
import Layout from "../../layouts/Layout.astro";
import { supabase } from "../../db/supabase";

const { location_id } = Astro.params;
const { cookies, redirect } = Astro;

const accessToken = cookies.get("sb-access-token");
const refreshToken = cookies.get("sb-refresh-token");

if (!accessToken || !refreshToken) {
    cookies.set("referrer-url", Astro.url.pathname, {
        path: "/",
    });
    return redirect("/login");
}

const { data, error } = await supabase.auth.setSession({
    refresh_token: refreshToken.value,
    access_token: accessToken.value,
});

if (error) {
    cookies.delete("sb-access-token", {
        path: "/",
    });
    cookies.delete("sb-refresh-token", {
        path: "/",
    });

    return redirect("/login");
}

const email = data.user?.email;

// iz baze povuci detalje o specifičnom kafiću na temelju UUID iz linka
const location = {
    id: "u3z",
    neighborhood: "Kozari bok",
    street_address: "Unska 3",
    city: "Zagreb",
};

const tables = [
    {
        id: 1,
        location_uuid: "u3z",
        taken_seats: 2,
        total_seats: 4,
        reserved: false,
        coordinates: { row: 200, col: 50 },
    },
    {
        id: 2,
        taken_seats: 0,
        total_seats: 4,
        reserved: false,
        coordinates: { row: 0, col: 200 },
    },
    {
        id: 3,
        taken_seats: 5,
        total_seats: 6,
        reserved: false,
        coordinates: { row: 300, col: 1 },
    },
    {
        id: 4,
        taken_seats: 0,
        total_seats: 6,
        reserved: true,
        coordinates: { row: 3, col: 5 },
    },
];
---

<Layout title="CoffeePlace">
    <main>
        <div class="center-align top-margin large-margin">
            <article
                class="top-margin medium-elevate medium-width center center-align middle-align surface"
            >
                <h4 class="freeman-regular">Edit location</h4>
            </article>
        </div>

        <div><span>Location ID: {location_id}</span></div>
        <!-- <div class="seating-chart medium-width center-align center"> -->
        <article
            class="vertical-margin medium-elevate medium-width center surface"
        >
            <div id="grid" class="medium-width border" style="height: 300px;">
                {
                    tables.map((table) => (
                        <div
                            class="table"
                            data-ui="#dialog"
                            data-id={table.id}
                            style={`transform:translate(${table.coordinates.row}px, ${table.coordinates.col}px);`}
                        >
                            <span class="center-align">
                                {table.taken_seats}/{table.total_seats}
                                <i>airline_seat_recline_normal</i>
                            </span>
                        </div>
                    ))
                }
            </div>
        </article>

        <div class="overlay blur"></div>
        <dialog id="dialog" class="center small-width">
            <form id="reservation-form">
                <h5 class="center-align bottom-margin">Reservation</h5>
                <p class="center-align">
                    <span>Are you sure that you want to reserve</span>
                    <span id="form-table-id" class="bold"></span>
                    <span>for next 15 minutes?</span>
                </p>

                <nav class="center-align">
                    <button type="submit" data-ui="#dialog">Confirm</button>
                    <button type="button" class="transparent" data-ui="#dialog">
                        Cancel
                    </button>
                </nav>
            </form>
        </dialog>
    </main>
</Layout>

<script define:vars={{ email, location_id }}>
    let selected_table_id = null;

    let handleClick = (id) => {
        selected_table_id = id;
        console.log("Table clicked with ID:", id);
        document.getElementById("form-table-id").innerHTML =
            `Table ${selected_table_id}`;
    };

    const tableButtons = document.querySelectorAll(".table");
    tableButtons.forEach((button) => {
        button.addEventListener("click", () => handleClick(button.dataset.id));
        button.style.backgroundColor = "yellow";
    });

    document
        .getElementById("reservation-form")
        .addEventListener("submit", async (event) => {
            event.preventDefault(); // Prevent the default form submission

            const formData = new FormData();
            formData.append("email", email);
            formData.append("location-id", location_id);
            formData.append("table-id", selected_table_id);

            try {
                const response = await fetch("/api/reservation", {
                    method: "POST",
                    body: formData,
                });

                if (response.status === 303) {
                    window.location.reload();
                }

                // handle error ako ne uspije
                //
                //
            } catch (error) {
                console.error("Error signing in:", error);
                alert("An unexpected error occurred. Please try again later."); // Generic error message
            }
        });
</script>

<style>
    .table {
        position: absolute;
        width: 50px;
        height: 50px;
        padding: 1px;
        background-clip: content-box;
        background-color: yellow;
        border-radius: 50%;
        display: flex;
        font-size: 20px;
    }

    .table:hover {
        outline: 2px solid;
        outline-color: #ff0000;
        cursor: pointer;
    }
</style>
