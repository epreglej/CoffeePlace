---
import Layout from "@layouts/Layout.astro";

const authentication_response = await fetch(
    "http://localhost:8080/authenticate",
    {
        method: "GET",
        headers: { "Content-Type": "application/json" },
    },
);

const locations_response = await fetch("http://localhost:8080/location", {
    method: "GET",
    headers: { "Content-Type": "application/json" },
});

const locations = await locations_response.json();
console.log(locations);
---

<Layout title="CoffeePlace">
    <main>
        <div class="center-align top-margin large-margin">
            <article
                class="top-margin medium-elevate medium-width center center-align middle-align surface"
            >
                <h2 class="freeman-regular">CoffeePlace ☕️</h2>
            </article>
        </div>

        <div
            class="field vertical-margin large center medium-width prefix small-elevate round fill"
        >
            <i class="front">search</i>
            <input
                id="search"
                class="primary-hover surface"
                type="text"
                placeholder="Pretražite lokacije..."
            />
        </div>

        <div
            id="locations-container"
            class="medium-width center surface round small-padding shadow"
        >
        </div>

        <div class="center top-margin">
            <a href="/dashboard" class="small-text bold primary-hover center"
                >Administrator log-in</a
            >
        </div>
    </main>
</Layout>

<script define:vars={{ locations }}>
    const locationsContainer = document.getElementById("locations-container");

    function renderLocations(locations) {
        locationsContainer.innerHTML = locations
            .map(
                (location) => `
            <div class="margin small-margin">
                <a href="/locations/${location.uuid}">
                    <div>
                        <h6>${location.neighborhood}</h6>
                        <span>
                            ${location.street_address}, ${location.city}
                        </span>
                    </div>
                </a>
            </div>`,
            )
            .join("");
    }

    document.getElementById("search").addEventListener("keyup", (event) => {
        const filterValue = event.target.value.toLowerCase();
        const filteredLocations = locations.filter((location) =>
            location.neighborhood.toLowerCase().includes(filterValue),
        );

        renderLocations(filteredLocations);
    });

    renderLocations(locations);
</script>
