---
import Layout from "@layouts/Layout.astro";
import { supabase } from "@databases/supabase.js";

const { cookies, redirect } = Astro;

const accessToken = cookies.get("sb-access-token");
const refreshToken = cookies.get("sb-refresh-token");

if (!accessToken || !refreshToken) {
    cookies.set("referrer-url", Astro.url.pathname, {
        path: "/",
    });
    return redirect("/login");
}

const { data, error } = await supabase.auth.setSession({
    refresh_token: refreshToken.value,
    access_token: accessToken.value,
});

if (error) {
    cookies.delete("sb-access-token", {
        path: "/",
    });
    cookies.delete("sb-refresh-token", {
        path: "/",
    });

    return redirect("/login");
}

const email = data.user?.email;
if (email !== "admin@coffee.place") {
    return redirect("/");
}

const reservations_response = await fetch("http://localhost:8080/table/all", {
    method: "GET",
    headers: { "Content-Type": "application/json" },
});

const reservations = await reservations_response.json();
console.log(reservations);
---

<Layout title="CoffeePlace">
    <main>
        <div class="center-align top-margin large-margin">
            <article
                class="top-margin medium-elevate medium-width center center-align middle-align surface"
            >
                <h2 class="freeman-regular">Reservation management ðŸ•“</h2>
            </article>
        </div>

        <div
            class="field vertical-margin large center medium-width prefix small-elevate round fill"
        >
            <i class="front">search</i>
            <input
                id="search"
                class="primary-hover surface"
                type="text"
                placeholder="PretraÅ¾ite lokacije..."
            />
        </div>

        <div
            id="reservations-container"
            class="medium-width center surface round small-padding shadow"
        >
        </div>
        <div id="blur" class="overlay blur"></div>
        <dialog id="dialog" class="center middle small-width">
            <form id="delete-reservation-form">
                <h5 class="center-align bottom-margin">Reservation</h5>
                <p class="center-align">
                    <span>
                        Are you sure that you want to delete reservation
                    </span>
                    <span id="form-reservation-id" class="bold"></span>?
                </p>

                <nav class="center-align">
                    <button type="submit" data-ui="#dialog">Confirm</button>
                    <button type="button" class="transparent" data-ui="#dialog">
                        Cancel
                    </button>
                </nav>
            </form>
        </dialog>
    </main>
</Layout>

<script define:vars={{ reservations }}>
    let selected_reservation_id = null;

    document.addEventListener("DOMContentLoaded", function () {
        var reservations = document.querySelectorAll(".reservation");
        reservations.forEach(function (reservation) {
            interact(reservation).on("tap", function (event) {
                ui("#dialog");
                const id = event.target.getAttribute("data-id");
                console.log(event.target);
                selected_reservation_id = id;
                document.getElementById("form-reservation-id").innerHTML =
                    `Table ${id}`;
            });
        });
    });

    function renderReservations(reservations) {
        document.getElementById("reservations-container").innerHTML =
            reservations
                .map(
                    (reservation) => `
            <div class="reservation horizontal-padding small-padding wave no-round" data-id="${reservation.id}">
                        <h6>${reservation.id}</h6>
                        <span>
                            ${reservation.location.street_address}, ${reservation.location.neighborhood}, ${reservation.location.city}
                        </span>
            </div>`,
                )
                .join("");
    }

    document
        .getElementById("delete-reservation-form")
        .addEventListener("submit", async (event) => {
            event.preventDefault();

            try {
                const response = await fetch(
                    "http://localhost:8080/table/reserved/" +
                        selected_reservation_id +
                        "/false",
                    {
                        method: "POST",
                    },
                );

                if (response.status === 200) {
                    window.location.reload();
                }
            } catch (error) {
                console.log(error);
            }
        });

    document.getElementById("search").addEventListener("keyup", (event) => {
        const filterValue = event.target.value.toLowerCase();
        const filteredReservations = reservations.filter((reservation) =>
            reservation.neighborhood.toLowerCase().includes(filterValue),
        );

        renderReservations(filteredReservations);
    });

    renderReservations(reservations);
</script>
